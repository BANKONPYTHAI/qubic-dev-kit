version: "3"

services:
  # Traefik reverse proxy service
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"               # HTTP entrypoint
      - "--entrypoints.websecure.address=:443"        # HTTPS entrypoint
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=youremail@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"                                      # HTTP port
      - "443:443"                                    # HTTPS port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt                    # Volume for Let's Encrypt data
    networks:
      - qubic
    restart: always

  # Qubic HTTP service with CORS fix
  qubic-http:
    image: ghcr.io/qubic/qubic-http:v0.7.0
    container_name: qubic-http
    labels:
      # Enable Traefik for this service
      - "traefik.enable=true"
      # Define the HTTP and HTTPS routers
      - "traefik.http.routers.qubic-http.entrypoints=web"
      - "traefik.http.routers.qubic-http.rule=(PathPrefix(`/v1/broadcast-transaction`) || PathPrefix(`/v1/block-height`) || PathPrefix(`/v1/tick-info`) || PathPrefix(`/v1/balances`) || PathPrefix(`/v1/assets`) || PathPrefix(`/v1/querySmartContract`))"
      - "traefik.http.routers.qubic-http.middlewares=qubic-http-stripprefix,cors-http"
      - "traefik.http.middlewares.qubic-http-stripprefix.stripprefix.prefixes=/v1"
      - "traefik.http.middlewares.cors-http.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.cors-http.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors-http.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors-http.headers.accesscontrolmaxage=300"
      - "traefik.http.middlewares.cors-http.headers.addvaryheader=true"
      # HTTPS router
      - "traefik.http.routers.qubic-http-secure.entrypoints=websecure"
      - "traefik.http.routers.qubic-http-secure.rule=(PathPrefix(`/v1/broadcast-transaction`) || PathPrefix(`/v1/block-height`) || PathPrefix(`/v1/tick-info`) || PathPrefix(`/v1/balances`) || PathPrefix(`/v1/assets`) || PathPrefix(`/v1/querySmartContract`))"
      - "traefik.http.routers.qubic-http-secure.tls=true"
      - "traefik.http.routers.qubic-http-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.qubic-http-secure.middlewares=qubic-http-stripprefix,cors-http"
      # Define the service port
      - "traefik.http.services.qubic-http.loadbalancer.server.port=8000"
    environment:
      QUBIC_API_SIDECAR_SERVER_HTTP_HOST: "0.0.0.0:8000"
      QUBIC_API_SIDECAR_SERVER_GRPC_HOST: "0.0.0.0:8001"
      QUBIC_API_SIDECAR_SERVER_MAX_TICK_FETCH_URL: "http://qubic-nodes:8080/max-tick"
      QUBIC_API_SIDECAR_POOL_NODE_FETCHER_URL: "http://qubic-nodes:8080/status"
      QUBIC_API_SIDECAR_POOL_NODE_FETCHER_TIMEOUT: "20s"
      QUBIC_API_SIDECAR_POOL_NODE_PORT: "31841"  # Set your node port here
    ports:
      - "0.0.0.0:8004:8001"
    networks:
      - qubic
    depends_on:
      qubic-nodes:
        condition: service_healthy
    restart: always

  qubic-archiver:
    image: ghcr.io/qubic/qubic-archiver:dev
    container_name: qubic-archiver
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qubic-archiver.rule=PathPrefix(`/v1`)"
      - "traefik.http.middlewares.qubic-archiver-stripprefix.stripprefix.prefixes=/v1"
      - "traefik.http.routers.qubic-archiver.middlewares=qubic-archiver-stripprefix, cors"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=300"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.routers.qubic-archiver.entrypoints=web"
      - "traefik.http.services.qubic-archiver.loadbalancer.server.port=8000"
      - "traefik.http.services.qubic-archiver.loadbalancer.healthcheck.path=/healthcheck"
      - "traefik.http.services.qubic-archiver.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.qubic-archiver.loadbalancer.healthcheck.timeout=5s"
      - "traefik.http.services.qubic-archiver.loadbalancer.healthcheck.scheme=http"
    ports:
      - "127.0.0.1:8001:8000"
    environment:
      QUBIC_ARCHIVER_SERVER_HTTP_HOST: "0.0.0.0:8000"
      QUBIC_ARCHIVER_SERVER_GRPC_HOST: "0.0.0.0:8001"
      QUBIC_ARCHIVER_SERVER_NODE_SYNC_THRESHOLD: 3
      QUBIC_ARCHIVER_SERVER_CHAIN_TICK_FETCH_URL: "http://qubic-nodes:8080/max-tick"
      QUBIC_ARCHIVER_POOL_NODE_FETCHER_URL: "http://qubic-nodes:8080/status"
      QUBIC_ARCHIVER_QUBIC_PROCESS_TICK_TIMEOUT: "5s"
    volumes:
      - ./store/archiver:/app/store
    networks:
      - traefik
    depends_on:
      qubic-nodes:
        condition: service_healthy
    restart: always

  # Qubic Nodes service
  qubic-nodes:
    image: ghcr.io/qubic/qubic-nodes:v1.0.4
    container_name: qubic-nodes
    ports:
      - "0.0.0.0:8080:8080"
    environment:
      QUBIC_NODES_QUBIC_PEER_LIST: "${HOST_IP}"  # Your node IPs
      QUBIC_NODES_QUBIC_PEER_PORT: "31841"                         # Your node port
    networks:
      - qubic
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:8080/status"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

networks:
  qubic:

